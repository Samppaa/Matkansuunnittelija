package com.matkansuunnittelija.userinterface;

import com.matkansuunnittelija.controllers.TravelPlanController;
import com.matkansuunnittelija.travelplanobjects.TravelPlan;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 * Ohjelman p채채ikkuna jossa n채kyy kaikki matkasuunnitelmat ja niille voi tehd채 toimintoja
 * @author Samuli
 */
public class MatkansuunnittelijaGUI extends javax.swing.JFrame {

    private DefaultListModel listViewModel;
    private final TravelPlanController travelPlanController = TravelPlanController.getInstance();

    private void initListView() {
        listViewModel = (DefaultListModel) jList1.getModel();
        listViewModel.removeAllElements();
        ArrayList<String> names = travelPlanController.getTravelPlanNames();
        names.stream().forEach((name) -> {
            listViewModel.addElement(name);
        });
    }

    /**
     * Creates new form MatkansuunnittelijaGUI
     */
    public MatkansuunnittelijaGUI() {
        initComponents();
        initListView();
    }

    public TravelPlanController getTravelPlanController() {
        return travelPlanController;
    }

    public void openEditTravelPlanMenu(String travelPlanName) {
        EditTravelPlanGUI editTravelPlanPanel = new EditTravelPlanGUI(this, true, travelPlanName);
        editTravelPlanPanel.setVisible(true);
    }
    
    public void addTravelPlanToMenu(String planName) {
        listViewModel.addElement(planName);
    }
    
    private boolean hasSelectedPlan() {
        String plan = getSelectedPlanName();
        if (plan == null) {
            return false;
        } else {
            return true;
        }
    }

    private String getSelectedPlanName() {
        int index = jList1.getSelectedIndex();
        if (index == -1) {
            return null;
        }
        String planName = (String) listViewModel.getElementAt(index);
        return planName;
    }
    
    private void setFileFilter(JFileChooser chooser) {
        chooser.setFileFilter(new FileFilter() {

                @Override
                public String getDescription() {
                    return "HTML pages (*.html)";
                }

                @Override
                public boolean accept(File f) {
                    if (f.isDirectory()) {
                        return true;
                    } else {
                        String filename = f.getName().toLowerCase();
                        return filename.endsWith(".html");
                    }
                }
            });
    }
    
    private void createHTMLFileFromPlan(TravelPlan plan, File file) {
        String fileName = file.toString();
        if (!fileName.endsWith(".html")) {
            fileName += ".html";
        }
        try (FileWriter fw = new FileWriter(fileName)) {
            fw.write(travelPlanController.generateHTMLForTravelPlan(plan.getName()));
            fw.close();
        } catch (IOException ex) {
            // Dialog box here
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        newTravelPlanButton = new javax.swing.JButton();
        deleteTravelPlanButton = new javax.swing.JButton();
        editTravelPlanButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        createPrintableTravelPlanButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Matkasuunnitelmat");
        setMinimumSize(new java.awt.Dimension(735, 361));

        jList1.setModel(new DefaultListModel());
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(jList1);

        newTravelPlanButton.setText("+");
        newTravelPlanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTravelPlanButtonActionPerformed(evt);
            }
        });

        deleteTravelPlanButton.setText("Poista valittu suunnittelma");
        deleteTravelPlanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTravelPlanButtonActionPerformed(evt);
            }
        });

        editTravelPlanButton.setText("Muokkaa valittua suunnitelmaa");
        editTravelPlanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTravelPlanButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Matkasuunnitelmat");

        createPrintableTravelPlanButton.setText("Luo tulostettava versio valitusta matkasuunnitelmasta");
        createPrintableTravelPlanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPrintableTravelPlanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteTravelPlanButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(createPrintableTravelPlanButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editTravelPlanButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newTravelPlanButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(newTravelPlanButton))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteTravelPlanButton)
                    .addComponent(editTravelPlanButton)
                    .addComponent(createPrintableTravelPlanButton))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newTravelPlanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTravelPlanButtonActionPerformed
        AddNewTravelPlanGUI addNewTravelPlanPanel = new AddNewTravelPlanGUI(this, true);
        addNewTravelPlanPanel.setVisible(true);
    }//GEN-LAST:event_newTravelPlanButtonActionPerformed

    private void deleteTravelPlanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTravelPlanButtonActionPerformed
        if (hasSelectedPlan()) {
            int index = jList1.getSelectedIndex();
            String planName = (String) listViewModel.getElementAt(index);
            travelPlanController.deleteTravelPlan(planName);
            listViewModel.removeElementAt(index);
        }
    }//GEN-LAST:event_deleteTravelPlanButtonActionPerformed

    private void editTravelPlanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTravelPlanButtonActionPerformed
        String selectedPlanName = getSelectedPlanName();
        if (selectedPlanName != null) {
            openEditTravelPlanMenu(selectedPlanName);
        }
    }//GEN-LAST:event_editTravelPlanButtonActionPerformed

    private void createPrintableTravelPlanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPrintableTravelPlanButtonActionPerformed
        if (hasSelectedPlan()) {
            TravelPlan plan = travelPlanController.getTravelPlan(getSelectedPlanName());
            JFileChooser c = new JFileChooser();
            setFileFilter(c);
            int rVal = c.showSaveDialog(this);
            if (rVal == JFileChooser.APPROVE_OPTION) {
                createHTMLFileFromPlan(plan, c.getSelectedFile());
            }
        }
    }//GEN-LAST:event_createPrintableTravelPlanButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatkansuunnittelijaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatkansuunnittelijaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatkansuunnittelijaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatkansuunnittelijaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatkansuunnittelijaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createPrintableTravelPlanButton;
    private javax.swing.JButton deleteTravelPlanButton;
    private javax.swing.JButton editTravelPlanButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton newTravelPlanButton;
    // End of variables declaration//GEN-END:variables
}
